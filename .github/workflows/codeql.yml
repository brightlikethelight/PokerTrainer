name: "CodeQL Advanced Security Analysis"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality,security-extended
        config: |
          name: "Enhanced Security Configuration"
          queries:
            - uses: security-and-quality
            - uses: security-extended
          paths-ignore:
            - node_modules
            - build
            - coverage
          
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        output: sarif-results
        
    - name: Filter SARIF results
      run: |
        # Filter out false positives and low-severity issues
        npx @microsoft/sarif-multitool filter \
          --input sarif-results/${{ matrix.language }}.sarif \
          --output filtered-results.sarif \
          --remove-rules "js/unused-local-variable,js/useless-assignment" \
          || cp sarif-results/${{ matrix.language }}.sarif filtered-results.sarif
          
    - name: Upload filtered SARIF
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: filtered-results.sarif
        
    - name: Create security summary
      run: |
        echo "## Security Analysis Summary" >> $GITHUB_STEP_SUMMARY
        echo "Language: ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "Status: âœ… Completed" >> $GITHUB_STEP_SUMMARY
        
  advanced-analysis:
    name: Advanced Security Checks
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/react
          p/typescript
          p/nodejs
          p/owasp-top-10
          
    - name: Check for hardcoded secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified
        
    - name: License compliance check
      run: |
        npx license-checker --production --summary --out licenses-summary.txt
        echo "## License Summary" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat licenses-summary.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY